<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".lua" encoding="us-ascii" #>
<#@ assembly name="$(ProjectDir)\..\LrControl.Api\bin\Debug\net461\LrControl.Api.dll" #>
<#@ import namespace="LrControl.Api.Modules.LrDevelopController.Parameters" #>

--[[----------------------------------------------------------------------------

Copyright © 2016 Michael Dahl

This file is part of LrControl.

LrControl is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

LrControl is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with LrControl.  If not, see <http://www.gnu.org/licenses/>.

------------------------------------------------------------------------------]]
local LrDevelopController = import 'LrDevelopController'

local cache = {}

local function registerValue(parameter, value)
	cache[parameter] = value
end

local function hasChanged(parameter) 
    local currentValue = LrDevelopController.getValue(parameter)
    local cacheValue = cache[parameter]
    
    if cacheValue == nil or (type(currentValue) == "number" and math.abs(currentValue-cacheValue) >= 0.01) or (type(currentValue) ~= "number" and currentValue ~= cacheValue) then
        registerValue(parameter, currentValue)
        return true
    else
        return false
    end
end

local parameters = {
<#
	foreach (var group in Parameters.AllGroups) 
	{
		foreach (var parameter in group.AllParameters) 
		{
			WriteLine(string.Format("    \"{0}\",", parameter.Name));
		}
	}

#>
}

return {
	Parameters    = parameters,
	HasChanged    = hasChanged,
	RegisterValue = registerValue, 
}